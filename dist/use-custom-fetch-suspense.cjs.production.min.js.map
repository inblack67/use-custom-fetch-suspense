{"version":3,"file":"use-custom-fetch-suspense.cjs.production.min.js","sources":["../src/index.ts","../src/fetchRoutes.ts"],"sourcesContent":["import produce from 'immer';\nimport lru from 'lru-cache';\nimport md5 from 'md5';\nimport fetchRoutes from './fetchRoutes'\n\nconst cache = new lru(50);\n\nexport default (url: string, options: object={}) => {\n    const key = `${url}.${md5(JSON.stringify(options))}`;\n\n    const value: any = cache.get(key) || { status: 'new', data: null }\n\n    if(value.status === 'resolved'){\n        return value.data;\n    }\n\n    const promise = fetchRoutes(url, options);\n\n    promise.then(data => {\n        cache.set(key, produce(value, (draft: any) => {\n            draft.status = 'resolved';\n            draft.data = data;\n        }));\n    })\n\n    throw promise; // will be caught by suspense\n}","export default (url: RequestInfo, options: RequestInit | undefined) => {\n    return fetch(url, options).then(res => res.json());\n}"],"names":["cache","lru","url","options","key","md5","JSON","stringify","value","get","status","data","promise","fetch","then","res","json","fetchRoutes","set","produce","draft"],"mappings":"kNAKMA,EAAQ,IAAIC,EAAI,6BAENC,EAAaC,YAAAA,IAAAA,EAAgB,QACnCC,EAASF,MAAOG,EAAIC,KAAKC,UAAUJ,IAEnCK,EAAaR,EAAMS,IAAIL,IAAQ,CAAEM,OAAQ,MAAOC,KAAM,SAExC,aAAjBH,EAAME,cACEF,EAAMG,SAGXC,WChBMV,EAAkBC,UACvBU,MAAMX,EAAKC,GAASW,MAAK,SAAAC,UAAOA,EAAIC,UDe3BC,CAAYf,EAAKC,SAEjCS,EAAQE,MAAK,SAAAH,GACTX,EAAMkB,IAAId,EAAKe,EAAQX,GAAO,SAACY,GAC3BA,EAAMV,OAAS,WACfU,EAAMT,KAAOA,SAIfC"}